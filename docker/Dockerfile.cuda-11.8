FROM nvidia/cuda:11.8.0-base-ubuntu22.04

# Set up timezone
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    git-lfs \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Python
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python-is-python3 \
    && rm -rf /var/lib/apt/lists/*

# Python3 dev
RUN apt-get update && apt-get install -y \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install opencv dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsm6 \
    libxext6\
    && rm -rf /var/lib/apt/lists/*

# Audio dependencies - for PyAudio
RUN apt-get update && apt-get install -y \
    libasound-dev \
    portaudio19-dev \
    libportaudio2 \
    libportaudiocpp0 \
    && rm -rf /var/lib/apt/lists/*

# Install ping for network testing
RUN apt-get update && apt-get install -y \
    iputils-ping \
    && rm -rf /var/lib/apt/lists/*

# Add espeak for text-to-speech
RUN apt-get update && apt-get install -y \
    espeak \
    && rm -rf /var/lib/apt/lists/*

# Install libxkbcommon-x11-0
# This is for rerun support
RUN apt-get update && apt-get install -y \
    libxkbcommon-x11-0 \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install mamba
RUN curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
RUN bash Miniforge3-$(uname)-$(uname -m).sh -b
# Add mamba to the path
ENV PATH /root/miniforge3/bin:$PATH

# Set a DOCKER flag to indicate we are running in a container
ENV DOCKER 1

# Run our installation script
COPY . .
RUN chmod +x install.sh && \
    ./install.sh -y --no-version --no-remove

# Configure mamba to start in the correct environment
RUN mamba init

# Clone robosuite repo
# from git clone https://github.com/ARISE-Initiative/robosuite -b robocasa_v0.1
RUN mamba activate stretch_ai && git clone https://github.com/ARISE-Initiative/robosuite -b robocasa_v0.1 && \
    cd robosuite && \
    pip install -e .

# Clone robocasa: git clone https://github.com/robocasa/robocasa
RUN mamba activate stretch_ai && git clone https://github.com/robocasa/robocasa && \
    cd robocasa && \
    pip install -e . && \
    python robocasa/scripts/setup_macros.py              # Set up system variables.

# Install stretch mujoco
RUN mamba activate stretch_ai && git clone git@github.com:hello-robot/stretch_mujoco.git && \
    cd stretch_mujoco && \
    pip install -e .

# Add to bashrc so that it starts into the correct environment
RUN echo "mamba activate stretch_ai" >> ~/.bashrc

# ENTRYPOINT ["mamba", "run", "--no-capture-output", "-n", "stretch_ai", "python", "your_script.py"]

# Copy requirements file (if you have one)
# COPY requirements.txt .

# Install Python packages (uncomment and modify as needed)
# RUN pip install --no-cache-dir -r requirements.txt

# Set the entrypoint
CMD ["/bin/bash"]

