FROM ubuntu:22.04
# We assume you only use this docker to collect data so we don't install from a docker image containing cuda

# USE BASH
SHELL ["/bin/bash", "-c"]

# Set up timezone
ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    git-lfs \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Python
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python-is-python3 \
    && rm -rf /var/lib/apt/lists/*

# Python3 dev
RUN apt-get update && apt-get install -y \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install opencv dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    libsm6 \
    libxext6\
    && rm -rf /var/lib/apt/lists/*

# Audio dependencies - for PyAudio
RUN apt-get update && apt-get install -y \
    libasound-dev \
    portaudio19-dev \
    libportaudio2 \
    libportaudiocpp0 \
    && rm -rf /var/lib/apt/lists/*

# Install ping for network testing
RUN apt-get update && apt-get install -y \
    iputils-ping \
    && rm -rf /var/lib/apt/lists/*

# Add espeak for text-to-speech
RUN apt-get update && apt-get install -y \
    espeak \
    && rm -rf /var/lib/apt/lists/*

# Install libxkbcommon-x11-0
# This is for rerun support
RUN apt-get update && apt-get install -y \
    libxkbcommon-x11-0 \
    && rm -rf /var/lib/apt/lists/*

# Install camera reading app required by dex teleop
RUN apt-get update && apt-get install -y \
    v4l-utils \
    && rm -rf /var/lib/apt/lists/*

RUN echo "Installing Stretch AI package"
RUN pip install --upgrade pip setuptools packaging build meson ninja

# Set working directory
WORKDIR /app

COPY . .

RUN pip install -e src/

RUN pip install webcam mediapipe

RUN git config --global --add safe.directory /app

# Set a DOCKER flag to indicate we are running in a container
ENV DOCKER=1

# ENTRYPOINT ["mamba", "run", "--no-capture-output", "-n", "stretch_ai", "python", "your_script.py"]

# Copy requirements file (if you have one)
# COPY requirements.txt .

# Install Python packages (uncomment and modify as needed)
# RUN pip install --no-cache-dir -r requirements.txt

# Set the entrypoint
CMD ["/bin/bash"]
